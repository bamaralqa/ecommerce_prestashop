# Passo a Passo para criação de testes automatizados:

1- Estruturar o PageObject de login
    - [ ]  1.1 Criar um arquivo chamado LoginPO.java dentro da pasta page.
    - [ ]  1.2 Fazer herança do arquivo BasePOjava. [ criar comentando nas coisas pelo JavaDoc - tipo: Construtor padrão para criação de uma nova instancia de pagina de Login]
    - [ ]  1.3 Fazer o mapeamento de todos os elementos da tela de login. 
    [use sempre no nome do elemento o nome dele q esta no site, ai fica bem claro]
            @FindBy(css ="form.form-login>div.alert>span") 
        public WebElement spamMensagem;

        @FindBy(id = "email") 
        public WebElement inputEmail; 
    - [ ]  1.3.1 Criar os elementos com o pageFactory.

2- Estruturar o arquivo de teste de login.
    - [ ]  2.1 Criar um arquivo chamado [LoginTest.java](http://LoginTest.java) dentro da pasta Test
    - [ ]  2.2 Fazer a herança do arquivo BaseTest.java
    - [ ]  2.3 Criar um método inicial que saiba instanciar uma PO de Login.
        Modelo de inicio : onde GooglePO é o nome da pagina
            private static GooglePO googlePage;
            
            @BeforeClass
            public static void prepararTestes(){
            googlePage = new GooglePO(driver);}
        
            @Test
            public void TC001_deveSerPossivelPesquisarNoGoogleOTextoBatataFrita(){...}
    - [ ]  2.4 Criar os teste baseado na planilha:
    - [ ]  2.4.1 TC001_naoDeveLogarNoSistemaComEmailESenhaVazios
   
3- Estruturar o arquivo de teste de login.
 Inspecionar elementos:

 botão criar: btn-adicionar
tituloPagina
botão voltar 
 
campo Código
nome
Quantidade
Value
Create date



  @FindBy(css ="form.form-login>div.alert>span") 
        public WebElement spamMensagem;

